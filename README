November 20 2020:

TOPICS FOUND BELOW:
a) WHAT IS CombTEs
b) HOW TO USE IT
c) FLEXIBILITY OF CombTEs
d) THE USED PARAMETERS
e) THE OUTPUT FILES
f) SUMMARIZING
g) RUNNING THE SCRIPTS IN A TERMINAL
h) CHANGING PARAMETERS
i) ABOUT THE AVAILABLE pHMMs


a) WHAT IS CombTEs:
CombTEs, a Perl script for Unix-like systems, is an auxiliary tool aimed to combine results from other programs, methods, and pipelines used to search for Transposable Elements (TEs) of the "Long Terminal Repeat Retrotransposons" (LTR-RT) order (Wicker et al., 2007) (and NOT to directly identify/classify TEs in a genome sequence).

The original focus of CombTEs is to deal with predictions produced by RepeatMasker (RM) and HMMER programs. However, it works on results from other tools/systems as well (see "FLEXIBILITY OF CombTEs" below).

About the library for RM and pHMMs for HMMER, one can use customized or public ones (for example, pHMMs from Dfam). Here, three different types of pHMMs (three for each superfamily: Bel-PAO, Copia, and Gypsy) are made available (see "ABOUT THE AVAILABLE pHMMs" below).

The output files of CombTEs present each resulting combination as "GROUP", describing the classification of that GROUP and several other details (see "THE OUTPUT FILES" below).

CombTEs allows to work on a whole chromosome or a set of very small genome sequences.

CombTEs was also thought originally to work on the TE superfamily level but, potentially, could deal with data related to TE families. Moreover, it is aimed to deal with LTR-RT but has the potential to be used with other orders of TEs.

CombTEs is quite simple to use, requiring no software installation and no computer programming knowledge to use it – just run the available scripts on the results from HMMER and RM and, if desirable, RPS-Blast.
Even for the ones with no experience in programming, it is quite simple and ease to change its parameters (see "CHANGING PARAMETERS" below).

CombTEs was written in a simple and direct way (in terms of programming). Thus, for those with knowledge in computer programming, it is possible to include results from other tools.



b) HOW TO USE IT:
The idea is that the tools/systems used to search for TEs would be run just once (normally for hours) and, after that, the user can perform very fast and easily many combination processes using CombTEs considering the **same** initial results from those tools, each combination using different values for the parameters used by CombTEs and its associated parsing scripts (each combination is run in few seconds).
The user can, then, compare the answers of these tests to obtain the final conclusions/results about the TE candidates identified by those tools in a query sequence.



c) FLEXIBILITY OF CombTEs:
To parse the initial predictions of RM and HMMER, the "extractHmmerRM.pl" script (available here) can be used to extract and format these predictions.

But, CombTEs is flexible: results from other tools, pipelines, or methods can be used in the combination processes.
A tool that could also be used with CombTEs is RPS-Blast - for the ones interested in it, the "extractRPSB.pl" script (also available here) can be used to parse its predictions.
WARNING: if RPS-Blast will be considered in the combination process, delete the comments in front some lines in "CombTEs.pl" - search for "OBS_1" in that script.

During execution, CombTEs launches the script(s) to preprocess the results produced by "extractHmmerRM.pl" and "extractRPSB.pl" (when RPS-Blast is used). These scripts are "finalCandidsHmmerRM.pl" and "finalCandidsRpsBlast.pl"; their aim is to generate the final candidates of each tool.

"finalCandidsHmmerRM.pl" can preprocess results from RM and HMMER in an independent way; this means that, besides accepting the use of HMMER and RM together (at the same search process), CombTEs also allows to use only one of them with other tools in searches for LTR-RT (for this, just change the "@tools" array in "ParamsGeneral.pm" file).

Initially, for each tool, "finalCandidsHmmerRM.pl" generates the candidates of each superfamily of interest (one file for each superfamily) - thus, the user can verify the final candidates of each tool; in this step, the predictions for each superfamily are filtered (based on the E-values and SW score). After that, "finalCandidsHmmerRM.pl" compares the initial candidates of all superfamilies of RM OR HMMER that are inside a specific region of the query sequence and selects the best identified candidate (i.e., the one with the lowest E-value OR the highest SW score) as the final one of that tool – only one file, with the selected candidates (with all superfamilies together), is generated for each tool.

An equivalent script ("finalCandidsRpsBlast.pl", also available here) can be used to generate the final candidates of RPS-Blast with the superfamily classification based on the conserved domains (Wicker et al., 2007) identified into a delimited region of the query sequence (if only "integrase" is identified in this region, the final candidate is classified as "inconclusive" - the sequence could be Bel-PAO, Copia, or Gypsy); the script filters the predictions based on their E-values – only one final file is produced by this script for all superfamilies together.

When using another tool with CombTEs, the user has to provide the necessary script to preprocess its results. This new script has to generate a file with all final candidates of that tool, for all considered superfamilies together, in the following format:
CANDIDATE_1 - FROM: pos_INIT - TO: pos_FINAL - LENGTH: length - SENSE: Direct/Reverse - CLASSIFICATION: superfam_1
PREDIC---FROM--pos_init---TO--anyPos---LENGTH--length_1---METRICS--metr---SENSE--D/R---SUPERFAM--superfam_1
PREDIC---FROM--anyPos---TO--anyPos---LENGTH--length_2---METRICS--metr---SENSE--D/R---SUPERFAM--superfam_1
....
PREDIC---FROM--anyPos---TO--pos_final---LENGTH--length_N---METRICS--metr---SENSE--D/R---SUPERFAM--superfam_1
(one blank line) (ATTENTION HERE)
CANDIDATE_2 - FROM: pos_INIT - TO: pos_FINAL - LENGTH: length - SENSE: Direct/Reverse - CLASSIFICATION: superfam_2
PREDIC---FROM--pos_init---TO--anyPos---LENGTH--length_1---METRICS--metr---SENSE--D/R---SUPERFAM--superfam_2
....
....
"CANDIDATE_1", "CANDIDATE_2", etc. must be sorted by their "FROM" positions ("pos_INIT") into the query sequence and the value of "METRICS" (metr) would be used when filtering the predictions before producing the final candidates of each tool.

Also, the predictions ("PREDIC") that make up each "CANDIDATE" must be sorted by their "FROM" positions; then, the FROM ("pos_init") position of the first prediction of a CANDIDATE will be the FROM ("pos_INIT") position of the CANDIDATE and the TO ("pos_final") position of the last prediction of the CANDIDATE will be the TO ("pos_FINAL") position of the CANDIDATE.

WARNING: two things must be done for CombTEs works fine with the new tool:
a) change the following parameters in the "ParamsGeneral.pm" file: "@otherTools", "%outFileNamesOthers", "%filterOtherTools", and "%goodMetrOtherTools" (see explanation in "ParamsGeneral.pm");
b) include a new "test condition" in CombTEs.pl" - search for "OBS_2" in that script.



d) THE USED PARAMETERS:
Several parameters are used by the scripts and can be changed.
The main ones would be used to define the:
- considered superfamilies
- used tools
- filter values for the tools
- "good metrics" for the tools - "good metrics" for a tool defines the value of the tool's metrics for which the user would consider a prediction as a correct one (but yet demanding curation)
- maximum distance from a candidate to the next one to consider them inside a SAME FINAL GROUP
- conserved domains to be considered in the analyses (after running RPS-Blast)

Also, others would be used to define the:
- allowed (small) variation between respective extremities for cases of overlapping between 2 predictions
- minimum value to consider that there is an overlapping between 2 predictions
- allowed maximum value of overlap between 2 candidates to consider them SEPARATE FINAL CANDIDATES
- maximum distance between 2 predictions to consider them inside the SAME CANDIDATE
- minimum length for a prediction of RM to be included in the analyses
- minimum score to consider a "short" prediction of RepeatMasker in the analyses: if (prediction length < minimum length for a prediction), its SWscore must be >= this minimum score, to be considered



e) THE OUTPUT FILES:
CombTEs produces files in 2 formats: text and CSV. They both are readable by humans (making easier prediction curation) and automated systems (for additional automated analyses).

The final file produced by CombTEs (called “FinalClassification.txt”) describes all "GROUPs" formed in the combination process, with details about each candidate (from each tool) that forms the group.
Example of information about a formed GROUP:
GROUP 44 - FROM: 192743 - TO: 195971 - LENGTH: 3229 - SENSE: Reverse - CLASS: Gypsy - TOOL(S): HMMER/RepeatMasker/RpsBlast
    CANDIDATE_74 - Dmel-2L - FROM: 192743 - TO: 195971 - LENGTH: 3229 - SENSE: Reverse - CLASSIFICATION: Gypsy	HMMER
	PREDIC---FROM--192743---TO--195971---LENGTH--3229---EVALUE--3.4e-153---SCORE--499.1---SENSE--Reverse---SUPERFAM--Gypsy
    CANDIDATE_72 - Dmel-2L - FROM: 193015 - TO: 195690 - LENGTH: 2676 - SENSE: Reverse - CLASSIFICATION: Gypsy	RpsBlast
	DOMAIN--rve---FROM--193015---TO--193323---LENGTH--309---EVALUE--3.93e-11---SCORE--61.2---SENSE--Reverse
	DOMAIN--RNase_HI_RT_Ty3---FROM--193912---TO--194253---LENGTH--342---EVALUE--2.51e-42---SCORE--150---SENSE--Reverse
	DOMAIN--RT_LTR---FROM--194572---TO--195120---LENGTH--549---EVALUE--4.02e-63---SCORE--212---SENSE--Reverse
	DOMAIN--retropepsin_like---FROM--195448---TO--195690---LENGTH--243---EVALUE--2.46e-06---SCORE--46.9---SENSE--Reverse
    CANDIDATE_120 - Dmel-2L - FROM: 193895 - TO: 195228 - LENGTH: 1334 - SENSE: Reverse - CLASSIFICATION: Gypsy	RepeatMasker
	PREDIC---FROM--193895---TO--195228---LENGTH--1334---SWSCORE--1067---SENSE--Reverse---MATCHINGREPEAT--YOYOI---SUPERFAM--Gypsy

This GROUP (44) was produced combining predictions from 3 tools (HMMER, RepeatMasker, and RpsBlast), classified as "Gypsy" in "reverse" sense.

Each GROUP is also written in other output files (named ONE, TWO, THREE, etc.), depending on the amount of tools used to form that GROUP. 

The CSV file shows a summary of the formed GROUPs, highlighting (by showing the corresponding tools) the ones that present at least one of their metrics as being considered a good one (the "good metrics" cited above, i.e., low E-value and/or high SW score) and, also, describing the domains found by RPS-Blast (when this tool is used to search for LTR-RT).



f) SUMMARIZING:
The user has to:
- run RM and HMMER (and, possibly, other tools) – just once (unless the user changes RM’s database or the pHMMs), normally for hours;
- format the "raw" results produced by these tools – for this, use "extractHmmerRM.pl" (and "extractRPSB.pl"), which would be run just once (unless parameters are changed); they are run in a very fast way, in the order of seconds;
- run CombTEs – to combine the TE candidates of RM and HMMER (and, possibly, other tools); to do this, CombTEs launches the necessary scripts ("finalCandidsHmmerRM.pl" and, maybe, "finalCandidsRpsBlast.pl") that preprocess the results generated by "extractHmmerRM.pl" (and, maybe, "extractRPSB.pl", or others). CombTEs runs very fast (also, in the order of seconds).



The following would be useful for the ones with low experience in running scripts in a terminal.


g) RUNNING THE SCRIPTS IN A TERMINAL:
- to extract and format predictions:
	> perl extractHmmerRM.pl TOOL SUPERFAM file-superfam-tool
		- TOOL = HMMER or RM
		- SUPERFAM = the one of interest
		- file-superfam-tool = file with initial predictions of TOOL for that SUPERFAM
	> perl extractRPSB.pl output_file_rpsblast
		- output_file_rpsblast = the file from RPS-Blast

- to combine candidates of the used tools:
	> perl CombTEs.pl


h) CHANGING PARAMETERS:
Using a text editor, change the necessary parameters directly in the files (or, if you want, "packages") "ParamsGeneral.pm", "ParamsHmmerRM.pm", and "ParamsRpsblast.pm". 
In these files, there are some "warnings" about what to do (better: "not to do"), like "DO NOT COMMENT THIS LINE" and "CHANGE IT IN "ParamsGeneral.pm"". Please, follow them!



i) ABOUT THE AVAILABLE pHMMs:
Three different types of pHMMs (three for each superfamily considered initially: Bel-PAO, Copia, and Gypsy) are made available here. The basic difference between them is in the way the training sequences are obtained.
Previously (Fischer et al., 2018), we tested six different ways of selecting reference sequences to train pHMMs and showed that three of them (used here) can produce very interesting results; such results are improved when they are combined.

These three ways of selecting reference sequences are:
1) the conventional way: it uses the whole internal NT regions of TEs as reference sequences – in this work, these internal regions were obtained directly from Repbase (Jurka et al., 2005), producing one pHMM for each superfamily, which was run separately;
{ Jurka, J. et al. 2005. Repbase update, a database of eukaryotic repetitive elements. Cytogenet. Genome Res. 110, 462-467. } 

2) clustering the conventional way: the sequences of each set (for each superfamily) of the conventional way were clustered according to the level of similarity – here, this process produced 3 or 4 clusters, depending on the superfamily; each cluster was aligned separately and used to train the corresponding pHMM. Finally, one general pHMM (resulting from the concatenation of these 3 or 4 pHMMs) was generated for each superfamily;

3) clustering CDS regions: this last way considers the NT regions related to the CDS of LTR-RT – the set of CDS for each superfamily can be obtained directly from Repbase (using the start and end positions described there). Considering those previous tests (Fischer et al., 2018), only the CDS of Repbase presenting at least one region recognized as related to conserved domains of LTR-RT (particularly, aspartic proteinase, reverse transcriptase, RNase H, and integrase (Wicker et al., 2007)) were selected in this work to train the pHMMs. IMPORTANT to note that the WHOLE NT CDS was taken and not only the NT regions related to the conserved domains. Then, each CDS set for each superfamily was clustered, forming 3 or 4 clusters for each superfamily; each resulting cluster was aligned separately to train the corresponding pHMM. Finally, one general pHMM (resulting from the concatenation of these 3 or 4 pHMMs) was generated for each superfamily.
{ Fischer, C.N.; Campos, V.A.; Barella, V.H. 2018. On the search for retrotransposons: alternative protocols to obtain sequences to learn profile hidden Markov models. J. Comput. Biol., 25. https://doi.org/10.1089/cmb.2017.0219. }
{ Wicker, T., Sabot, F., Hua-Van, A., et al. 2007. A unified classification system for eukaryotic transposable elements. Nat. Rev. Genet. 8, 973-982. }


Three general pHMMs can be found inside the "pHMMs.tar.gz" file, one for each superfamily: "model_Bel.hmm", "model_Copia.hmm", and "model_Gypsy.hmm". 
Each general pHMM is a concatenation of the separated pHMMs trained using the three ways of selecting reference sequences described just above - search for "NAME" in each general pHMM and you find:
- NAME SUPERFAM_complet: the pHMM corresponding to the conventional way of selecting reference sequences for SUPERFAM;
- NAME SUPERFAM_compl-cluster-(0/1/2/3):  the pHMMs of clustering the conventional way;
- NAME SUPERFAM_domain-cluster-(0/1/2/3): the pHMMs of clustering CDS regions.


Since each general pHMM is made up of several (7 or 8) pHMMs, each one may generate redundancies among the resulting predictions, i.e., 2 or more predictions inside a same region (the same predictions or overlapped predictions).
These redundancies can be eliminated using the "extractHmmerRM.pl" script.

Also, the run time for each general pHMM is bigger than running just one pHMM (for example, the conventional one).
As shown in Fischer et al. (2018), the PRECISION and RECALL obtained using such general pHMMs can outweigh the time spent in running them. 
AND remember: the basic idea is to run HMMER just once and, then, use CombTEs (to perform a predicion combination) several times.


